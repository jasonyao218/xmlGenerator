{"version":3,"sources":["../../../src/lib/components/button/mdl-button.component.ts"],"names":[],"mappings":"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","file":"mdl-button.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Input,\n  ElementRef,\n  OnChanges,\n  Renderer2,\n  NgModule,\n  ModuleWithProviders,\n  ViewEncapsulation,\n  SimpleChanges\n} from '@angular/core';\nimport { MdlError } from '../common/mdl-error';\nimport { toBoolean } from '../common/boolean-property';\nimport { callNative } from '../common/native-support';\n\nexport class MdlUnsupportedButtonTypeError extends MdlError {\n  constructor(type: string) {\n    /* istanbul ignore next */\n    super(`Button type \"${type}\" isn't supported (allowed: raised, fab, mini-fab, icon, '').`);\n  }\n}\n\nexport class MdlUnsupportedColoredTypeError extends MdlError {\n  constructor(type: string) {\n    /* istanbul ignore next */\n    super(`Colored type \"${type}\" isn't supported (allowed: primary, accent, '').`);\n  }\n}\n\nconst MDL_BUTTON_TYPES = [\n  'raised',\n  'fab',\n  'mini-fab',\n  'icon',\n  ''\n];\n\nconst MDL_COLORED_TYPES = [\n  'primary',\n  'accent',\n  ''\n];\n\n\n\nexport class MdlButtonComponent implements OnChanges {\n\n  private element: HTMLElement;\n\n\n   public mdlButtonType: 'raised' | 'fab' | 'mini-fab' | 'icon' | '' ;\n   public mdlColoredType: 'primary' | 'accent' | '';\n\n  private _disabled: boolean = false;\n  \n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) { this._disabled = toBoolean(value); }\n\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\n    this.element = elementRef.nativeElement;\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n\n    if (this.mdlButtonType && MDL_BUTTON_TYPES.indexOf(this.mdlButtonType) === -1) {\n      throw new MdlUnsupportedButtonTypeError(this.mdlButtonType);\n    }\n\n    if ( this.mdlColoredType && MDL_COLORED_TYPES.indexOf(this.mdlColoredType) === -1) {\n      throw new MdlUnsupportedColoredTypeError(this.mdlColoredType);\n    }\n  }\n\n  public onMouseUp() {\n    this.blurIt();\n  }\n\n  public onMouseLeave() {\n    this.blurIt();\n  }\n\n  public blurIt() {\n    callNative(this.element, 'blur');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'mdl-button, button[mdl-button], a[mdl-button]',\n  host: {\n    '[attr.disabled]': 'disabled ? \"disabled\" : null',\n    '(mouseup)': 'onMouseUp()',\n    '(mouseleave)': 'onMouseLeave()',\n    '[class.mdl-button]': 'true',\n    '[class.mdl-button--raised]':   'mdlButtonType == \"raised\"',\n    '[class.mdl-button--fab]':      'mdlButtonType == \"fab\" || mdlButtonType == \"mini-fab\"',\n    '[class.mdl-button--mini-fab]': 'mdlButtonType == \"mini-fab\"',\n    '[class.mdl-button--icon]':     'mdlButtonType == \"icon\"',\n    '[class.mdl-button--primary]' : 'mdlColoredType == \"primary\"',\n    '[class.mdl-button--accent]' :  'mdlColoredType == \"accent\"'\n  },\n  exportAs: 'mdlButton',\n  template: '<ng-content></ng-content>',\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'mdlButtonType': [{ type: Input, args: ['mdl-button-type', ] },],\n'mdlColoredType': [{ type: Input, args: ['mdl-colored', ] },],\n'disabled': [{ type: Input },],\n};\n}\n\n\nconst MDL_BUTTON_DIRECTIVES = [MdlButtonComponent];\n\n\nexport class MdlButtonModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdlButtonModule,\n      providers: []\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [],\n  exports: MDL_BUTTON_DIRECTIVES,\n  declarations: MDL_BUTTON_DIRECTIVES,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}