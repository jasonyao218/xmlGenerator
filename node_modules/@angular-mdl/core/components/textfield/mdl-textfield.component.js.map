{"version":3,"sources":["../../../src/lib/components/textfield/mdl-textfield.component.ts"],"names":[],"mappings":"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","file":"mdl-textfield.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  forwardRef,\n  Input,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  DoCheck,\n  ViewChild,\n  NgModule,\n  Optional,\n  Inject,\n  EventEmitter,\n  Output,\n  ViewEncapsulation,\n  ModuleWithProviders,\n  SimpleChanges,\n  InjectionToken\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor\n} from '@angular/forms';\n\nimport { toBoolean } from '../common/boolean-property';\nimport { toNumber } from '../common/number.property';\nimport { MdlButtonModule } from '../button/mdl-button.component';\nimport { MdlIconModule } from '../icon/mdl-icon.component';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { noop } from '../common/noop';\nimport { callNative } from '../common/native-support';\n\nexport const DISABLE_NATIVE_VALIDITY_CHECKING = new InjectionToken<boolean>('disableNativeValidityChecking');\n\n\nlet nextId = 0;\n\nconst IS_FOCUSED = 'is-focused';\nconst IS_DISABLED = 'is-disabled';\nconst IS_INVALID = 'is-invalid';\nconst IS_DIRTY = 'is-dirty';\n\n\nexport class MdlTextFieldComponent implements ControlValueAccessor, OnChanges, DoCheck {\n  private value_: any;\n  private el: HTMLElement;\n\n  \n  public blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n  \n  public focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n  \n  public keyupEmitter: EventEmitter<KeyboardEvent> = new EventEmitter<KeyboardEvent>();\n\n   public inputEl: ElementRef;\n\n  get value(): any { return this.value_; };\n   set value(v: any) {\n    this.value_ = this.type === 'number' ? ( v === '' ? null : parseFloat(v)) : v;\n    this.onChangeCallback(this.value);\n  }\n\n   public type = 'text';\n   public label;\n   public pattern;\n   public min;\n   public max;\n   public step;\n   public name;\n   public id = `mdl-textfield-${nextId++}`;\n   public errorMessage;\n\n  private _disabled: boolean = false;\n  \n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) { this._disabled = toBoolean(value); }\n\n  private _readonly: boolean = false;\n  \n  get readonly() { return this._readonly; }\n  set readonly(value) { this._readonly = toBoolean(value); }\n\n  private _required: boolean = false;\n  \n  get required() { return this._required; }\n  set required(value) { this._required = toBoolean(value); }\n\n  private _autofocus: boolean = false;\n  \n  get autofocus() { return this._autofocus; }\n  set autofocus(value) { this._autofocus = toBoolean(value); }\n\n  private _isFloatingLabel: boolean = false;\n  \n  get isFloatingLabel() { return this._isFloatingLabel; }\n  set isFloatingLabel(value) { this._isFloatingLabel = toBoolean(value); }\n\n   public placeholder: string;\n   public autocomplete: string;\n\n  private _rows: number = null;\n  \n  get rows() { return this._rows; }\n  set rows(value) { this._rows = toNumber(value); }\n\n  private _maxrows: number = -1;\n  \n  get maxrows() { return this._maxrows; }\n  set maxrows(value) { this._maxrows = toNumber(value); }\n   public icon: string;\n\n   public tabindex: number = null;\n\n   public maxlength: number = null;\n\n\n  // @experimental\n  private _disableNativeValidityChecking: boolean = false;\n  \n  get disableNativeValidityChecking() { return this._disableNativeValidityChecking; }\n  set disableNativeValidityChecking(value) { this._disableNativeValidityChecking = toBoolean(value);}\n\n  constructor(\n    private renderer: Renderer2,\n    private elmRef: ElementRef,\n      private nativeCheckGlobalDisabled: Boolean) {\n    this.el = elmRef.nativeElement;\n  }\n\n  public writeValue(value: any): void {\n    this.value_ = value;\n    this.checkDirty();\n  }\n\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  public registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    this.checkDisabled();\n  }\n\n  public ngDoCheck() {\n    this.checkValidity();\n    this.checkDirty();\n  }\n\n  public setFocus() {\n    if ( !this.inputEl ) {\n      return;\n    }\n    callNative(this.inputEl.nativeElement, 'focus');\n  }\n\n  protected onFocus(event: FocusEvent) {\n    this.renderer.addClass(this.el, IS_FOCUSED);\n    this.focusEmitter.emit(event);\n  }\n\n  protected onBlur(event: FocusEvent) {\n    this.renderer.removeClass(this.el, IS_FOCUSED);\n    this.onTouchedCallback();\n    this.blurEmitter.emit(event);\n  }\n\n  protected onKeyup(event: KeyboardEvent) {\n    this.keyupEmitter.emit(event);\n  }\n\n  private checkDisabled() {\n    if (this.disabled){\n      this.renderer.addClass(this.el, IS_DISABLED);\n    } else {\n      this.renderer.removeClass(this.el, IS_DISABLED);\n    }\n  }\n\n  private checkValidity() {\n    // check the global setting - if globally disabled do no check\n    if ( this.nativeCheckGlobalDisabled === true ) {\n      return;\n    }\n    // check local setting - if locally disabled do no check\n    if ( this.disableNativeValidityChecking ) {\n      return;\n    }\n    if (this.inputEl && this.inputEl.nativeElement.validity) {\n      if (!this.inputEl.nativeElement.validity.valid){\n        this.renderer.addClass(this.el, IS_INVALID);\n      } else {\n        this.renderer.removeClass(this.el, IS_INVALID);\n      }\n    }\n  }\n\n  private checkDirty() {\n    let dirty = this.inputEl && this.inputEl.nativeElement.value && this.inputEl.nativeElement.value.length > 0;\n    if (dirty){\n      this.renderer.addClass(this.el, IS_DIRTY);\n    } else {\n      this.renderer.removeClass(this.el, IS_DIRTY);\n    }\n\n  }\n\n  public keydownTextarea($event: KeyboardEvent) {\n    var currentRowCount = this.inputEl.nativeElement.value.split('\\n').length;\n    if ($event.keyCode === 13) {\n      if (currentRowCount >= this.maxrows && this.maxrows !== -1) {\n        $event.preventDefault();\n      }\n    }\n  }\n\n  // hm only for test purposes to simulate a change to the input field that will change the\n  // model value.\n  triggerChange(event: Event) {\n    this.value = (event.target as HTMLInputElement).value;\n    this.onTouchedCallback();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'mdl-textfield',\n  host: {\n    '[class.mdl-textfield]': 'true',\n    '[class.is-upgraded]': 'true',\n    '[class.mdl-textfield--expandable]': 'icon',\n    '[class.mdl-textfield--floating-label]': 'isFloatingLabel',\n    '[class.has-placeholder]': 'placeholder'\n  },\n  template: `\n   <div *ngIf=\"!icon\">\n     <textarea\n        *ngIf=\"rows\"\n        #input\n        [rows]=\"rows\"\n        class=\"mdl-textfield__input\"\n        type=\"text\"\n        [attr.name]=\"name\"\n        [id]=\"id\"\n        [placeholder]=\"placeholder ? placeholder : ''\"\n        (focus)=\"onFocus($event)\"\n        (blur)=\"onBlur($event)\"\n        (keydown)=\"keydownTextarea($event)\"\n        (keyup)=\"onKeyup($event)\"\n        [(ngModel)]=\"value\"\n        [disabled]=\"disabled\"\n        [required]=\"required\"\n        [autofocus]=\"autofocus\"\n        [readonly]=\"readonly\"\n        ></textarea>\n     <input\n        *ngIf=\"!rows\"\n        #input\n        class=\"mdl-textfield__input\"\n        [type]=\"type\"\n        [attr.name]=\"name\"\n        [id]=\"id\"\n        [pattern]=\"pattern ? pattern : '.*'\"\n        [attr.min]=\"min\"\n        [attr.max]=\"max\"\n        [attr.step]=\"step\"\n        [placeholder]=\"placeholder ? placeholder : ''\"\n        [autocomplete]=\"autocomplete ? autocomplete : ''\"\n        (focus)=\"onFocus($event)\"\n        (blur)=\"onBlur($event)\"\n        (keyup)=\"onKeyup($event)\"\n        [(ngModel)]=\"value\"\n        [disabled]=\"disabled\"\n        [required]=\"required\"\n        [autofocus]=\"autofocus\"\n        [readonly]=\"readonly\"\n        [attr.tabindex]=\"tabindex\"\n        [maxlength]=\"maxlength\"\n        >\n     <label class=\"mdl-textfield__label\" [attr.for]=\"id\">{{label}}</label>\n     <span class=\"mdl-textfield__error\">{{errorMessage}}</span>\n   </div>\n   <div *ngIf=\"icon\">\n      <button mdl-button mdl-button-type=\"icon\" (click)=\"setFocus()\">\n         <mdl-icon>{{icon}}</mdl-icon>\n      </button>\n      <div class=\"mdl-textfield__expandable-holder\">\n       <input\n          #input\n          class=\"mdl-textfield__input\"\n          [type]=\"type\"\n          [attr.name]=\"name\"\n          [id]=\"id\"\n          [pattern]=\"pattern ? pattern : '.*'\"\n          [attr.min]=\"min\"\n          [attr.max]=\"max\"\n          [attr.step]=\"step\"\n          [placeholder]=\"placeholder ? placeholder : ''\"\n          [autocomplete]=\"autocomplete ? autocomplete : ''\"\n          (focus)=\"onFocus($event)\"\n          (blur)=\"onBlur($event)\"\n          (keyup)=\"onKeyup($event)\"\n          [(ngModel)]=\"value\"\n          [disabled]=\"disabled\"\n          [required]=\"required\"\n          [autofocus]=\"autofocus\"\n          [readonly]=\"readonly\"\n          [attr.tabindex]=\"tabindex\"\n          [maxlength]=\"maxlength\"\n         >\n     <label class=\"mdl-textfield__label\" [attr.for]=\"id\">{{label}}</label>\n     <span class=\"mdl-textfield__error\">{{errorMessage}}</span>\n      </div>\n   </div>\n   `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MdlTextFieldComponent),\n    multi: true\n  }],\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [DISABLE_NATIVE_VALIDITY_CHECKING, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'blurEmitter': [{ type: Output, args: ['blur', ] },],\n'focusEmitter': [{ type: Output, args: ['focus', ] },],\n'keyupEmitter': [{ type: Output, args: ['keyup', ] },],\n'inputEl': [{ type: ViewChild, args: ['input', ] },],\n'value': [{ type: Input },],\n'type': [{ type: Input },],\n'label': [{ type: Input },],\n'pattern': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'step': [{ type: Input },],\n'name': [{ type: Input },],\n'id': [{ type: Input },],\n'errorMessage': [{ type: Input, args: ['error-msg', ] },],\n'disabled': [{ type: Input },],\n'readonly': [{ type: Input },],\n'required': [{ type: Input },],\n'autofocus': [{ type: Input },],\n'isFloatingLabel': [{ type: Input, args: ['floating-label', ] },],\n'placeholder': [{ type: Input },],\n'autocomplete': [{ type: Input },],\n'rows': [{ type: Input },],\n'maxrows': [{ type: Input },],\n'icon': [{ type: Input },],\n'tabindex': [{ type: Input },],\n'maxlength': [{ type: Input },],\n'disableNativeValidityChecking': [{ type: Input },],\n};\n}\n\n\n\nexport class MdlTextFieldModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdlTextFieldModule,\n      providers: []\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdlIconModule, MdlButtonModule, FormsModule, CommonModule],\n  exports: [MdlTextFieldComponent],\n  declarations: [MdlTextFieldComponent],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}