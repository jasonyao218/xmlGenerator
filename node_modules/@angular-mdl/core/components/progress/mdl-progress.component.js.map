{"version":3,"sources":["../../../src/lib/components/progress/mdl-progress.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EAGL,QAAQ,EACR,iBAAiB,EACjB,uBAAuB,EAExB,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAE,SAAA,EAAU,MAAO,4BAAA,CAA6B;AACvD,OAAO,EAAE,YAAA,EAAa,MAAO,iBAAA,CAAkB;AAG/C;IAAA;QACU,aAAQ,GAAG,CAAC,CAAC;QACb,WAAM,GAAG,GAAG,CAAC;QACb,QAAG,GAAG,CAAC,CAAC;QAER,mBAAc,GAAY,KAAK,CAAC;IAwC1C,CAAC;IAtCC,sBAAI,+CAAa;aAAjB,cAAsB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;aACnD,UAAkB,KAAK,IAAI,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;OADjB;IAG5C,0CAAW,GAAlB,UAAmB,OAA+C;QAChE,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;QACjD,CAAC;IACH,CAAC;IAEO,wCAAS,GAAjB,UAAkB,CAAS;QACzB,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;IACrB,CAAC;IA2BH,2BAAC;AAAD,CA7CA,AA6CC;;AAzBM,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,cAAc;gBACxB,IAAI,EAAE;oBACJ,sBAAsB,EAAE,MAAM;oBAC9B,qCAAqC,EAAE,sBAAsB;iBAC9D;gBACD,QAAQ,EAAE,gPAIT;gBACD,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,mCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,mCAAc,GAA2C;IAChE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC9B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACzB,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAClC,CAAC;AAGF,IAZM,uBAAA,GAA0B,CAAA,oBAAE,CAAoB,CAAC;AAevD;IAAA;IAiBA,CAAC;IAhBe,yBAAO,GAArB;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;IAWH,wBAAC;AAAD,CAjBA,AAiBC;;AAVM,4BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACvB,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,uBAAuB;gBAChC,YAAY,EAAE,uBAAuB;aACtC,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,gCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"mdl-progress.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChange,\n  NgModule,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ModuleWithProviders\n} from '@angular/core';\nimport { toBoolean } from '../common/boolean-property';\nimport { CommonModule } from '@angular/common';\n\n\nexport class MdlProgressComponent implements OnChanges {\n   public progress = 0;\n   public buffer = 100;\n   public aux = 0;\n\n  private _indeterminate: boolean = false;\n  \n  get indeterminate() { return this._indeterminate; }\n  set indeterminate(value) { this._indeterminate = toBoolean(value); }\n\n  public ngOnChanges(changes: {[propertyName: string]: SimpleChange}) {\n    if (changes['buffer']) {\n      this.setBuffer(changes['buffer'].currentValue);\n    }\n  }\n\n  private setBuffer(b: number) {\n    this.aux = 100 - b;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'mdl-progress',\n  host: {\n    '[class.mdl-progress]': 'true',\n    '[class.mdl-progress__indeterminate]': 'indeterminate===true'\n  },\n  template: `\n    <div class=\"progressbar bar bar1\" [style.width]=\"progress + '%'\"></div>\n    <div class=\"bufferbar bar bar2\" [style.width]=\"buffer + '%'\"></div>\n    <div class=\"auxbar bar bar3\" [ngStyle]=\"{'width': aux+'%'}\"></div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'progress': [{ type: Input },],\n'buffer': [{ type: Input },],\n'aux': [{ type: Input },],\n'indeterminate': [{ type: Input },],\n};\n}\n\nconst MDL_PROGRESS_DIRECTIVES = [MdlProgressComponent];\n\n\nexport class MdlProgressModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdlProgressModule,\n      providers: []\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  exports: MDL_PROGRESS_DIRECTIVES,\n  declarations: MDL_PROGRESS_DIRECTIVES,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}