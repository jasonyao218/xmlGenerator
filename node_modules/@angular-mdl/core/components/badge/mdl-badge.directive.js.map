{"version":3,"sources":["../../../src/lib/components/badge/mdl-badge.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,KAAK,EAEL,UAAU,EACV,SAAS,EACT,QAAQ,EAGT,MAAM,eAAA,CAAgB;AAGvB,IAAM,cAAA,GAAiB,YAAA,CAAa;AAGpC;IAME,2BAAoB,UAAsB,EAAU,QAAmB;QAAnD,eAAU,GAAV,UAAU,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QACrE,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,aAAa,CAAC;IACrC,CAAC;IAEM,uCAAW,GAAlB,UAAmB,OAAsB;QACvC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,KAAK,IAAI,IAAI,OAAO,IAAI,CAAC,eAAe,KAAK,WAAW,CAAC,CAAA,CAAC;YAChF,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;YACvD,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IAC5E,CAAC;IAkBH,wBAAC;AAAD,CAlCA,AAkCC;;AAhBM,4BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,aAAa;gBACvB,IAAI,EAAE;oBACJ,mBAAmB,EAAE,MAAM;iBAC5B;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,gCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,SAAS,GAAG;CAClB,EAH6F,CAG7F,CAAC;AACK,gCAAc,GAA2C;IAChE,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAE;CAC3D,CAAC;AAIF;IAAA;IAWA,CAAC;IAAD,+BAAC;AAAD,CAXA,AAWC;;AAX6C,mCAAU,GAA0B;IAClF,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,qBAAqB;gBAC/B,IAAI,EAAE;oBACJ,4BAA4B,EAAE,MAAM;iBACrC;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,uCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAIF;IAAA;IAWA,CAAC;IAAD,oCAAC;AAAD,CAXA,AAWC;;AAXkD,wCAAU,GAA0B;IACvF,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,2BAA2B;gBACrC,IAAI,EAAE;oBACJ,kCAAkC,EAAE,MAAM;iBAC3C;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,4CAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAIF,IAvBM,oBAAA,GAAuB,CAAA,iBAAE,EAAkB,wBAAA,EAA0B,6BAAA,CAA8B,CAAC;AA0B1G;IAAA;IAiBA,CAAC;IAhBe,sBAAO,GAArB;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,cAAc;YACxB,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;IAWH,qBAAC;AAAD,CAjBA,AAiBC;;AAVM,yBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACvB,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,oBAAoB;gBAC7B,YAAY,EAAE,oBAAoB;aACnC,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,6BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"mdl-badge.directive.js","sourceRoot":"","sourcesContent":["import {\n  Directive,\n  Input,\n  OnChanges,\n  ElementRef,\n  Renderer2,\n  NgModule,\n  ModuleWithProviders,\n  SimpleChanges\n} from '@angular/core';\n\n\nconst DATA_BADE_ATTR = 'data-badge';\n\n\nexport class MdlBadgeDirective implements OnChanges {\n\n  private el: HTMLElement;\n\n   public mdlBadgeContent: string;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n    this.el = elementRef.nativeElement;\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (this.mdlBadgeContent === null || typeof this.mdlBadgeContent === 'undefined'){\n      this.renderer.removeAttribute(this.el, DATA_BADE_ATTR);\n      return;\n    }\n    this.renderer.setAttribute(this.el, DATA_BADE_ATTR, this.mdlBadgeContent);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdl-badge]',\n  host: {\n    '[class.mdl-badge]': 'true'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'mdlBadgeContent': [{ type: Input, args: ['mdl-badge', ] },],\n};\n}\n\n\nexport class MdlBadgeOverlapDirective {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdl-badge-overlap]',\n  host: {\n    '[class.mdl-badge--overlap]': 'true'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport class MdlBadgeNoBackgroundDirective {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdl-badge-no-background]',\n  host: {\n    '[class.mdl-badge--no-background]': 'true'\n  }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nconst MDL_BADGE_DIRECTIVES = [MdlBadgeDirective, MdlBadgeOverlapDirective, MdlBadgeNoBackgroundDirective];\n\n\nexport class MdlBadgeModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdlBadgeModule,\n      providers: []\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [],\n  exports: MDL_BADGE_DIRECTIVES,\n  declarations: MDL_BADGE_DIRECTIVES,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}