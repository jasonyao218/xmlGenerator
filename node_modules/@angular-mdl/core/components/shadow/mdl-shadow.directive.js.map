{"version":3,"sources":["../../../src/lib/components/shadow/mdl-shadow.directive.ts"],"names":[],"mappings":"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","file":"mdl-shadow.directive.js","sourceRoot":"","sourcesContent":["import {\n  Directive,\n  Input,\n  OnChanges,\n  SimpleChange,\n  ElementRef,\n  Renderer2,\n  NgModule,\n  ModuleWithProviders\n} from '@angular/core';\nimport { MdlError } from '../common/mdl-error';\nimport { toNumber } from '../common/number.property';\n\nexport class MdlUnsupportedShadowValueError extends MdlError {\n  constructor(value: number | string ) {\n    /* istanbul ignore next */\n    super(`Shadow value \"${value}\" isn't supported (allowed: 2,3,4,6,8,16,24).`);\n  }\n}\n\nconst MDL_SHADOW_VALUES = [0, 2, 3, 4, 6, 8, 16, 24];\n\n\nexport class MdlShadowDirective implements OnChanges {\n\n  private el: HTMLElement;\n\n  private _mdlShadow: number = 2;\n  \n  get mdlShadow() { return this._mdlShadow; }\n  set mdlShadow(value) { this._mdlShadow = toNumber(value); }\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n    this.el = elementRef.nativeElement;\n  }\n\n  public ngOnChanges(changes: {[key: string]: SimpleChange}) {\n\n\n    if (MDL_SHADOW_VALUES.indexOf(Number(this.mdlShadow)) === -1) {\n      throw new MdlUnsupportedShadowValueError(this.mdlShadow);\n    }\n\n    let change = changes['mdlShadow'];\n\n    if (!change.isFirstChange()) {\n      this.renderer.removeClass(this.el, `mdl-shadow--${change.previousValue}dp`);\n    }\n\n    this.renderer.addClass(this.el, `mdl-shadow--${change.currentValue}dp`);\n\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdl-shadow]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'mdlShadow': [{ type: Input, args: ['mdl-shadow', ] },],\n};\n}\n\n\nconst MDL_SHADOW_DIRECTIVES = [MdlShadowDirective];\n\n\nexport class MdlShadowModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdlShadowModule,\n      providers: []\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [],\n  exports: MDL_SHADOW_DIRECTIVES,\n  declarations: MDL_SHADOW_DIRECTIVES,\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}