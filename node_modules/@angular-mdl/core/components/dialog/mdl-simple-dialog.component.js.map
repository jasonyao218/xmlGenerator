{"version":3,"sources":["../../../src/lib/components/dialog/mdl-simple-dialog.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,iBAAiB,EACjB,YAAY,EACZ,UAAU,EACV,MAAM,EACN,YAAY,EAEb,MAAM,eAAA,CAAgB;AACvB,OAAO,EACL,kBAAkB,EAClB,iBAAiB,EAClB,MAAM,sBAAA,CAAuB;AAK9B,OAAO,EAAE,kBAAA,EAAmB,MAAO,gCAAA,CAAiC;AAIpE;IAIE,oFAAoF;IACpF,kCACU,mBAAkD,EAClD,MAA0B;QAFpC,iBASC;QARS,wBAAmB,GAAnB,mBAAmB,CAA+B;QAClD,WAAM,GAAN,MAAM,CAAoB;QAElC,MAAM,CAAC,SAAS,EAAE,CAAC,SAAS,CAAE;YAC5B,EAAE,CAAA,CAAC,KAAI,CAAC,OAAO,CAAC,CAAA,CAAC;gBACf,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACtD,CAAC;QACH,CAAC,CAAC,CAAA;IACJ,CAAC;IAEM,gDAAa,GAApB,UAAqB,MAAwB;QAC3C,MAAM,CAAC,OAAO,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IACrB,CAAC;IAGM,wCAAK,GAAZ;QACE,wDAAwD;QACxD,IAAI,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAE,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,eAAe,EAAtB,CAAsB,CAAC,CAAC;QAC3F,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YAChB,WAAW,CAAC,OAAO,EAAE,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACrB,CAAC;IACH,CAAC;IAgCH,+BAAC;AAAD,CA7DA,AA6DC;;AA9BM,mCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,sBAAsB;gBAChC,QAAQ,EAAE,upBAaT;gBACD,aAAa,EAAE,iBAAiB,CAAC,IAAI;aAEtC,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,uCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,UAAU,CAAE,cAAM,OAAA,iBAAiB,EAAjB,CAAiB,CAAC,EAAG,EAAE,EAAG,EAAC;IACnG,EAAC,IAAI,EAAE,kBAAkB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,UAAU,CAAE,cAAM,OAAA,kBAAkB,EAAlB,CAAkB,CAAC,EAAG,EAAE,EAAG,EAAC;CAC5G,EAH6F,CAG7F,CAAC;AACK,uCAAc,GAA2C;IAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,kBAAkB,EAAG,EAAE,EAAE;IAClE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,aAAa,EAAG,EAAE,EAAE;CAC1D,CAAC","file":"mdl-simple-dialog.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  ViewEncapsulation,\n  HostListener,\n  forwardRef,\n  Inject,\n  ViewChildren,\n  QueryList\n} from '@angular/core';\nimport {\n  MdlDialogReference,\n  MDL_CONFIGUARTION\n} from './mdl-dialog.service';\nimport {\n  IMdlDialogAction,\n  IMdlSimpleDialogConfiguration\n} from './mdl-dialog-configuration';\nimport { MdlButtonComponent } from '../button/mdl-button.component';\n\n\n\nexport class MdlSimpleDialogComponent {\n\n   public buttons: QueryList<MdlButtonComponent>;\n\n  // why do i need forwardRef at this point, the demo LoginDialog dosn't need this!?!?\n  constructor(\n     public dialogConfiguration: IMdlSimpleDialogConfiguration,\n     public dialog: MdlDialogReference) {\n\n    dialog.onVisible().subscribe( () => {\n      if(this.buttons){\n        this.buttons.first.elementRef.nativeElement.focus();\n      }\n    })\n  }\n\n  public actionClicked(action: IMdlDialogAction) {\n    action.handler();\n    this.dialog.hide();\n  }\n\n  \n  public onEsc(): void {\n    // run the first action that is marked as closing action\n    let closeAction = this.dialogConfiguration.actions.find( action => action.isClosingAction);\n    if (closeAction) {\n      closeAction.handler();\n      this.dialog.hide();\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'mdl-dialog-component',\n  template: `\n      <h3 class=\"mdl-dialog__title\" *ngIf=\"dialogConfiguration?.title\">{{dialogConfiguration?.title}}</h3>\n      <div class=\"mdl-dialog__content\" [innerHTML]=\"dialogConfiguration?.message\"></div>\n      <div \n        class=\"mdl-dialog__actions\" \n        [ngClass]=\"{'mdl-dialog__actions--full-width': dialogConfiguration?.fullWidthAction}\">\n        <button\n          mdl-button mdl-colored=\"primary\"\n          type=\"button\" \n          *ngFor=\"let action of dialogConfiguration?.actions\" \n          (click)=\"actionClicked(action)\"\n          [ngClass]=\"{'close': action.isClosingAction}\">{{action.text}}</button>\n      </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [forwardRef( () => MDL_CONFIGUARTION), ] }, ]},\n{type: MdlDialogReference, decorators: [{ type: Inject, args: [forwardRef( () => MdlDialogReference), ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'buttons': [{ type: ViewChildren, args: [MdlButtonComponent, ] },],\n'onEsc': [{ type: HostListener, args: ['keydown.esc', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}