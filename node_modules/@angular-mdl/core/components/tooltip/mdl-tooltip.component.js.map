{"version":3,"sources":["../../../src/lib/components/tooltip/mdl-tooltip.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EACL,SAAS,EACT,UAAU,EACV,SAAS,EACT,iBAAiB,EACjB,KAAK,EACN,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAE,yBAAA,EAA0B,MAAO,gCAAA,CAAiC;AAE3E,IAAM,SAAA,GAAY,WAAA,CAAY;AAE9B,IAAM,IAAA,GAAoC;IACxC,qBAAqB,EAAE,MAAA;IACvB,4BAA4B,EAAE,OAAA;IAC9B,2BAA2B,EAAE,kBAAA;IAC7B,4BAA4B,EAAE,mBAAA;IAC9B,0BAA0B,EAAE,iBAAA;IAC5B,6BAA6B,EAAE,oBAAA;CAChC,CAAC;AAGF;IAUE,mCACU,KAAiB,EACjB,QAAmB,EACnB,yBAAoD;QAFpD,UAAK,GAAL,KAAK,CAAY;QACjB,aAAQ,GAAR,QAAQ,CAAW;QACnB,8BAAyB,GAAzB,yBAAyB,CAA2B;QAVvD,UAAK,GAAG,KAAK,CAAC;QAEb,WAAM,GAAG,KAAK,CAAC;QAUrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,aAAa,CAAC;IACrC,CAAC;IAEM,8CAAU,GAAjB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAClC,CAAC;QACD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAEM,8CAAU,GAAjB,UAAkB,KAAU;QAA5B,iBAQC;QAPC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;gBAC3B,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC5B,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACjB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC1B,CAAC;IACH,CAAC;IAEO,wCAAI,GAAZ,UAAa,OAAoB;QAC/B,IAAI,KAAK,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;QAC5C,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QAC3C,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;QAE7C,IAAI,KAAK,GAAG,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,WAAW,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEtG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QACpE,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAEO,6CAAS,GAAjB,UAAkB,MAAe;QAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;QAC9D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAEM,4CAAQ,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAmBH,gCAAC;AAAD,CA/EA,AA+EC;;AAlBM,oCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,oBAAoB;gBAC9B,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE,4BAA4B;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;gBACtC,aAAa,EAAE,iBAAiB,CAAC,IAAI;aACtC,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,wCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,SAAS,GAAG;IACnB,EAAC,IAAI,EAAE,yBAAyB,GAAG;CAClC,EAJ6F,CAI7F,CAAC;AACK,wCAAc,GAA2C;IAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC1B,CAAC;AAIF;IAAyC,uCAAyB;IAChE,6BAAY,KAAiB,EAAE,QAAmB,EAAE,yBAAoD;eACtG,kBAAM,KAAK,EAAE,QAAQ,EAAE,yBAAyB,CAAC;IACnD,CAAC;IAiBH,0BAAC;AAAD,CApBA,AAoBC,CApBwC,yBAAyB;;AAI3D,8BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE,sCAAsC;gBAChD,QAAQ,EAAE,YAAY;gBACtB,IAAI,EAAE,IAAI;gBACV,SAAS,EAAE,CAAC,yBAAyB,CAAC;gBACtC,aAAa,EAAE,iBAAiB,CAAC,IAAI;aACtC,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,kCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,SAAS,GAAG;IACnB,EAAC,IAAI,EAAE,yBAAyB,GAAG;CAClC,EAJ6F,CAI7F,CAAC","file":"mdl-tooltip.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  ElementRef,\n  Renderer2,\n  ViewEncapsulation,\n  Input\n} from '@angular/core';\nimport { MdlTooltipPositionService } from './mdl-tooltip-position.service';\n\nconst IS_ACTIVE = 'is-active';\n\nconst host:  { [key: string]: string; } = {\n  '[class.mdl-tooltip]': 'true',\n  '[class.mdl-tooltip--large]': 'large',\n  '[class.mdl-tooltip--left]': 'position==\"left\"',\n  '[class.mdl-tooltip--right]': 'position==\"right\"',\n  '[class.mdl-tooltip--top]': 'position==\"top\"',\n  '[class.mdl-tooltip--bottom]': 'position==\"bottom\"'\n};\n\n\nexport class MdlSimpleTooltipComponent {\n  public tooltipText: string;\n  public element: HTMLElement;\n  public large = false;\n  public position: 'left' | 'right' | 'top' | 'bottom';\n  private active = false;\n\n   delay: Number;\n  private delayTimeout: any;\n\n  constructor(\n    private elRef: ElementRef,\n    private renderer: Renderer2,\n    private mdlTooltipPositionService: MdlTooltipPositionService) {\n\n    this.element = elRef.nativeElement;\n  }\n\n  public mouseLeave() {\n    if (this.delayTimeout) {\n      clearTimeout(this.delayTimeout);\n    }\n    this.setActive(false);\n  }\n\n  public mouseEnter(event: any) {\n    if (this.delay) {\n      this.delayTimeout = setTimeout(() => {\n          this.show(event.target);\n      }, this.delay);\n    } else {\n      this.show(event.target);\n    }\n  }\n\n  private show(element: HTMLElement){\n    let props = element.getBoundingClientRect();\n    let offsetWidth = this.element.offsetWidth;\n    let offsetHeight = this.element.offsetHeight;\n\n    let style = this.mdlTooltipPositionService.calcStyle(offsetWidth, offsetHeight, props, this.position);\n\n    for (var key in style) {\n      this.renderer.setStyle(this.elRef.nativeElement, key, style[key]);\n    }\n\n    this.setActive(true);\n  }\n\n  private setActive(active: boolean){\n    this.active = active;\n    if (active) {\n      this.renderer.addClass(this.elRef.nativeElement, IS_ACTIVE);\n    } else {\n      this.renderer.removeClass(this.elRef.nativeElement, IS_ACTIVE);\n    }\n  }\n\n  public isActive() {\n    return this.active;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'mdl-simple-tooltip',\n  host: host,\n  template: '<div>{{tooltipText}}</div>',\n  providers: [MdlTooltipPositionService],\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: MdlTooltipPositionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'delay': [{ type: Input },],\n};\n}\n\n\nexport class MdlTooltipComponent extends MdlSimpleTooltipComponent {\n  constructor(elRef: ElementRef, renderer: Renderer2, mdlTooltipPositionService: MdlTooltipPositionService) {\n    super(elRef, renderer, mdlTooltipPositionService);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'mdl-tooltip',\n  template: '<div><ng-content></ng-content></div>',\n  exportAs: 'mdlTooltip',\n  host: host,\n  providers: [MdlTooltipPositionService],\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: MdlTooltipPositionService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}